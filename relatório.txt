Nas primeiras três linhas do código são as biblioteca que usaremos no projeto, a primeira a biblioteca "os", serviu para criar e acessar os arquivos com informações de usuário, depois importamos o "tkinter" como "tk", ele será responsável pela criação de janelas, já no teceiro import pegamos da biblioteca "tkinter" o "ttk" que usamos para fazer os widgets, e "messagebox" para abrir janelas de mensagens/avisos para erros, informações e ações.

Partindo para a primeira função do programa, "inicializar arquivos()" para cria os dois arquivos, caso não estejam criados, de texto que ficam com as informações de usuário, próxima função "cadastrar_usuario()", ela paga os valores matricula, nome e senha, que são pedidos ao usuário posteriormente, abrindo o arquivo "usuarios.txt" com o open, e lendo-o com "r" será permitido que tenha mais de um usuário tenha as informações nome e senha iguais, porem a matricula e uma informação única caso ao cadastro tente por um valor já existente não vai ser permitido, depois disso com todas as informações certas usaremos "a" para adicionar os valores no arquivo.

"validar_login()" função que será usada na janela de login para ler o arquivo com as informações de usuário, matricula e senha, caso contrário, se o laço for terminar sem encontrar um usuário válido, a função retorna None, ou seja login inválido, "obter_livros()" criando uma lista chamada livros, inicialmente vazia, vamos por, dados do arquivo "livros.txt", na linha (caso aja outros usuários registrados no arquivo), de mesmo valor de "matricula", "adicionar_livro()" aqui que os valores como matricula e outras informações dos "livros". Lembrando que nessa e nas outras funções chamamos o "open()" como f para facilitar na construção do projeto.

Em todas as janelas usamos da biblioteca ttk, o Label para por textos na interface gráfica, como ao lado das caixas de entrada de informações, recebidas do usuário, o Entry para criar as caixas de entrada, Button para criar botões e "command" para por as funções que criamos antes, para por funcionalidades nos botões.

Agora começando a interface gráfica, com a tela inicial ("tela_inicial()"), definindo seu titulo, tamanho/escala, texto e sua formatação, mais os botões para abrirem outras duas janelas, podendo ser a tela de login ou a de cadastro, fechando a tela inicial ao abrir uma delas, aqui o programa começara a usar o messagebox, na janela de cadastro ele pedira um nome e senha para armazenar, além da matricula que será usada para verificar, usando "cadastrar_usuario()" e dizer se à outro usuário com mesma matricula, também ele irar verificar se a apenas números na matricula(outros caracteres não vão ser permitidos), por fim se não houver nada nos três campos um aviso será dado para o usuário.

Para a de login, o programa pede a matricula e a senha que será usada, em "nome_usuario()" com a função de validação de login, "validar_login()", se não de certo uma mensagem de erro será mostrada mas se o login for validado o programa irar abrir a ultima janela a "biblioteca" com os livro(s) do usuário. 

Função tela_cadastro():
Nesta função, é apresentada a tela de cadastro de usuários, onde os mesmos podem preencher os campos de matrícula, nome e senha. Após o preenchimento, o sistema verifica se todos os campos foram preenchidos corretamente. Caso a matrícula seja válida, o usuário é cadastrado; caso contrário, mensagens de erro ou aviso são apresentadas. A função realizar_cadastro() é responsável pela lógica de validação e cadastramento.

Função tela_login():
A tela de login permite que o usuário insira sua matrícula e senha para acessar o sistema. Se os dados de login estiverem corretos, o sistema leva o usuário para a próxima tela. Se houver algum erro, uma mensagem de erro é exibida. A função realizar_login() lida com o processo de verificação dos dados fornecidos e a navegação para a tela do usuário.

Função tela_usuario():
Após o login bem-sucedido, a tela do usuário exibe os livros registrados pelo usuário no sistema. Além disso, o usuário pode adicionar novos livros. A tela de usuário inclui uma lista de livros registrados e campos para inserir o nome, autor e código de um novo livro. As funções atualizar_lista() e adicionar_novo_livro() são responsáveis, respectivamente, por atualizar a lista de livros e adicionar novos registros de livros à base de dados.

Função inicializar_arquivos() e tela_inicial():
A função inicializar_arquivos( ) é chamada no início para garantir que os arquivos necessários para o funcionamento do sistema sejam criados ou carregados. A tela_inicial() seria o ponto de entrada inicial para a aplicação (presumivelmente já criada, embora não visível no código fornecido).
